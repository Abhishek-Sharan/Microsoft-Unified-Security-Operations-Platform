{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflowName": {
            "type": "string",
            "defaultValue": "MDCRecommendation(HealthytoUnhealthy)",
            "metadata": {
                "description": "Name of the Logic App workflow"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the Logic App deployment"
            }
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "Subscription ID where the Log Analytics workspace and connections are located"
            }
        },
        "logAnalyticsResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group name where the Log Analytics workspace is located"
            }
        },
        "logAnalyticsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Log Analytics workspace"
            }
        },
        "connectionsResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group name where the API connections are located"
            }
        },
        "azureMonitorLogsConnectionName": {
            "type": "string",
            "defaultValue": "azuremonitorlogs-9",
            "metadata": {
                "description": "Name of the Azure Monitor Logs API connection"
            }
        },
        "office365ConnectionName": {
            "type": "string",
            "defaultValue": "office365",
            "metadata": {
                "description": "Name of the Office 365 API connection"
            }
        },
        "emailRecipient": {
            "type": "string",
            "metadata": {
                "description": "Email address to receive the security recommendations report"
            }
        },
        "recurrenceTimeZone": {
            "type": "string",
            "defaultValue": "India Standard Time",
            "allowedValues": [
                "India Standard Time",
                "UTC",
                "Eastern Standard Time",
                "Pacific Standard Time",
                "Central Standard Time",
                "GMT Standard Time",
                "Central Europe Standard Time"
            ],
            "metadata": {
                "description": "Time zone for the recurrence schedule"
            }
        },
        "recurrenceHour": {
            "type": "int",
            "defaultValue": 13,
            "minValue": 0,
            "maxValue": 23,
            "metadata": {
                "description": "Hour of the day to run the report (0-23, 24-hour format)"
            }
        },
        "createConnections": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Set to true if you want to create new API connections, false if using existing ones"
            }
        }
    },
    "variables": {
        "azureMonitorLogsConnectionId": "[resourceId('Microsoft.Web/connections', parameters('azureMonitorLogsConnectionName'))]",
        "office365ConnectionId": "[resourceId('Microsoft.Web/connections', parameters('office365ConnectionName'))]",
        "azureMonitorLogsApiId": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]",
        "office365ApiId": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/office365')]"
    },
    "resources": [
        {
            "condition": "[parameters('createConnections')]",
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('azureMonitorLogsConnectionName')]",
            "location": "[parameters('location')]",
            "properties": {
                "displayName": "Azure Monitor Logs Connection",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('azureMonitorLogsApiId')]"
                }
            }
        },
        {
            "condition": "[parameters('createConnections')]",
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('office365ConnectionName')]",
            "location": "[parameters('location')]",
            "properties": {
                "displayName": "Office 365 Outlook Connection",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('office365ApiId')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflowName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[if(parameters('createConnections'), resourceId('Microsoft.Web/connections', parameters('azureMonitorLogsConnectionName')), '')]",
                "[if(parameters('createConnections'), resourceId('Microsoft.Web/connections', parameters('office365ConnectionName')), '')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "interval": 1,
                                "frequency": "Day",
                                "timeZone": "[parameters('recurrenceTimeZone')]",
                                "schedule": {
                                    "hours": [
                                        "[parameters('recurrenceHour')]"
                                    ]
                                }
                            },
                            "evaluatedRecurrence": {
                                "interval": 1,
                                "frequency": "Day",
                                "timeZone": "[parameters('recurrenceTimeZone')]",
                                "schedule": {
                                    "hours": [
                                        "[parameters('recurrenceHour')]"
                                    ]
                                }
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Run_query_and_list_results": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "let now_unhealthy = \n    SecurityRecommendation\n    | where TimeGenerated > ago(7d)\n    | where RecommendationState == \"Unhealthy\"\n    // For each resource and recommendation, get the latest record\n    | summarize arg_max(TimeGenerated, *) by AssessedResourceId, RecommendationDisplayName;\n// Get resources that were healthy approximately 14 days ago (between 12 and 14 days ago)\nlet past_healthy = \n    SecurityRecommendation\n    | where TimeGenerated between (ago(14d) .. ago(12d))\n    | where RecommendationState == \"Healthy\"\n    // For each resource and recommendation, get the latest record in that time window\n    | summarize arg_max(TimeGenerated, *) by AssessedResourceId, RecommendationDisplayName;\n// Join current unhealthy resources with their healthy state 14 days ago\nnow_unhealthy\n| join kind=inner past_healthy on AssessedResourceId, RecommendationDisplayName\n| project \n    AssessedResourceId,                      // Unique ID of the assessed resource\n    RecommendationDisplayName,               // Name of the security recommendation\n    RecommendationSeverity,                  // Severity level of the recommendation\n    Description,                            // Description explaining the recommendation\n    State_14DaysAgo = RecommendationState1,// Resource state about 14 days ago (should be \"Healthy\")\n    State_Recent = RecommendationState,    // Current resource state (should be \"Unhealthy\")\n    Timestamp_14DaysAgo = TimeGenerated1,  // Timestamp from ~14 days ago\n    Timestamp_Recent = TimeGenerated        // Most recent timestamp\n",
                                "path": "/queryData",
                                "queries": {
                                    "subscriptions": "[parameters('subscriptionId')]",
                                    "resourcegroups": "[parameters('logAnalyticsResourceGroup')]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "[parameters('logAnalyticsWorkspaceName')]",
                                    "timerange": "Set in query"
                                }
                            }
                        },
                        "Condition": {
                            "actions": {
                                "Create_HTML_table": {
                                    "type": "Table",
                                    "inputs": {
                                        "from": "@body('Run_query_and_list_results')?['value']",
                                        "format": "HTML"
                                    }
                                },
                                "Send_an_email_(V2)": {
                                    "runAfter": {
                                        "Create_HTML_table": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "To": "[parameters('emailRecipient')]",
                                            "Subject": "Defender for Cloud: Resources moved to Unhealthy state",
                                            "Body": "<p class=\"editor-paragraph\">Hello,<br><br>The following resources have moved from <b><strong class=\"editor-text-bold\" style=\"color: rgb(65, 117, 5);\">Healthy</strong></b> to <b><strong class=\"editor-text-bold\" style=\"color: rgb(208, 2, 27);\">Unhealthy</strong></b> state in Microsoft Defender for Cloud within the last 14 days:<br><br>Total affected recommendations: @{length(body('Run_query_and_list_results')?['value'])}<br><br>@{body('Create_HTML_table')}<br><br>Please review and take remediation actions based on the recommendation descriptions and severity levels.<br><br>Regards,<br>Azure Security Automation</p><br>",
                                            "Importance": "Normal"
                                        },
                                        "path": "/v2/Mail"
                                    }
                                }
                            },
                            "runAfter": {
                                "Run_query_and_list_results": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {}
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Run_query_and_list_results')?['value'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "id": "[variables('azureMonitorLogsApiId')]",
                                "connectionId": "[variables('azureMonitorLogsConnectionId')]",
                                "connectionName": "[parameters('azureMonitorLogsConnectionName')]"
                            },
                            "office365": {
                                "id": "[variables('office365ApiId')]",
                                "connectionId": "[variables('office365ConnectionId')]",
                                "connectionName": "[parameters('office365ConnectionName')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "logicAppName": {
            "type": "string",
            "value": "[parameters('workflowName')]"
        },
        "logicAppResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('workflowName'))]"
        },
        "azureMonitorLogsConnectionId": {
            "type": "string",
            "value": "[variables('azureMonitorLogsConnectionId')]"
        },
        "office365ConnectionId": {
            "type": "string",
            "value": "[variables('office365ConnectionId')]"
        }
    }
}