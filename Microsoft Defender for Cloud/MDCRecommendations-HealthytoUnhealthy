// Get resources that are currently unhealthy within the last 7 days
let now_unhealthy = 
    SecurityRecommendation
    | where TimeGenerated > ago(7d)
    | where RecommendationState == "Unhealthy"
    // For each resource and recommendation, get the latest record
    | summarize arg_max(TimeGenerated, *) by AssessedResourceId, RecommendationDisplayName;
// Get resources that were healthy approximately 14 days ago (between 12 and 14 days ago)
let past_healthy = 
    SecurityRecommendation
    | where TimeGenerated between (ago(14d) .. ago(12d))
    | where RecommendationState == "Healthy"
    // For each resource and recommendation, get the latest record in that time window
    | summarize arg_max(TimeGenerated, *) by AssessedResourceId, RecommendationDisplayName;
// Join current unhealthy resources with their healthy state 14 days ago
now_unhealthy
| join kind=inner past_healthy on AssessedResourceId, RecommendationDisplayName
| project 
    AssessedResourceId,                      // Unique ID of the assessed resource
    RecommendationDisplayName,               // Name of the security recommendation
    RecommendationSeverity,                  // Severity level of the recommendation
    Description,                            // Description explaining the recommendation
    State_14DaysAgo = RecommendationState1,// Resource state about 14 days ago (should be "Healthy")
    State_Recent = RecommendationState,    // Current resource state (should be "Unhealthy")
    Timestamp_14DaysAgo = TimeGenerated1,  // Timestamp from ~14 days ago
    Timestamp_Recent = TimeGenerated        // Most recent timestamp
